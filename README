Am inceput rezolvarea temei prin a construi 4 fisiere: unul in care am scris functiile reprezentative stivei, cum ar fii: crearea stivei, initializarea ei, verificarea daca o stiva este goala sau nu, adaugarea unul nod intr-o stiva, eliminarea unui nod din stiva, respectiva functia de dezalocare a memoriei pentru stiva; unu in care am creat functiile pentru coada: crearea cozii, crearea unui nod, dezalocarea memoriei pentru un nod, verificarea daca o coada este sau nu goala, initializarea cozii, adaugarea unui nod intr-o coada, respectiv eliminarea unui nod, apoi functia de dezalocare a memoriei; unul in care am scris o functia pentru a crea un nod, o functie pentru a crea o lista, apoi o functie pentru a initializa banda ca fiind o lista dublu inlantuita cu santinela. In aceasta am alocat memorie pentru banda, dar si pentru santinela, respectiv pentru primul nod aflat dupa santinela, pe care am scris '#', asa cum specifica in enuntul problemei. Am creat legaturile necesare intre acest nod si santinela, am setat ca next-ul acestui nod sa pointeze catre NULL si apoi am afisat banda. Apoi am creat o functie care sa dezaloce memoria benzii. 
Am inceput apoi sa creez functiile: in functia MOVE_LEFT verific daca nodul curent este primul nod din banda, in caz afirmativ, am dat return caci operatia nu se poate realiza, in caz contrar, nodul curent se muta cu o pozitie la stanga si devine nod curent->prev. 
In functia MOVE_RIGHT am verificat daca nodul curent este ultimul nod din banda; daca da, am creat un nod pentru a parcurge banda, care este egal cu santinela. Cand acest nod ajunge sa fie ultimul nod din banda, se insereaza un alt nod dupa acesta pe care pun #, apoi fac legaturile intre aceste doua noduri. Daca nodul curent nu este ultimul nod din banda, atunci nodul curent se deplaseaza cu o pozitie la dreapta devenind nod_curent->next. 
Functia MOVE_LEFT_CHAR: am incercat initial sa parcurg banda de la dreapta la stanga cautand caracterul dat, in cazul in care se ajungea la limita din stanga a benzii, reprezentand nodul imediat urmator santinelei, se afiseaza ERROR si pozitia nodului curent nu se modifica, insa am avut o eroare care persista, pe care nu am putut-o remedia, asa ca am creat functia astfel incat sa parcurga banda de la stanga la dreapta pana la ultima aparitie a caracterului pe care-l cautam, incrementand o variabila de fiecare data cand se gasea caracterul, initial aceasta fiind egala cu 0. Dupa parcurgerea while-ului, am verificat daca variabila este egala cu 0, inseamna ca nu s-a gasit in banda caracterul cautat, astfel afiseaza ERROR si pozitia degetului nu se modifica. Am egalat nodul curent cu variabila "pozitie" in care am salvat la inceputul functiei pozitia initiala a degetului. In caz contrar, variabila e diferita de 0, s-a gasit caracterul si pozitia degetului devine pozitia unde se afla ultima aparitie a caracterului cautat.
Functia MOVE_RIGHT_CHAR: am salvat pozitia initiala a degetului intr-o variabila. Am parcurs banda spre dreapta verificand de fiecare data daca valoarea nodului curent este egala cu caracterul cautat. In caz afirmativ, am dat return pentru a iesi din while caci s a gasit caracterul. Am creat un nod care reprezenta santinela, de care ma voi ajuta pentru a parcurge banda. Cand acesta ajunge sa fie ultimul nod din banda, inserez un nou nod dupa acesta pe care adaug # si fac legaturile necesare intre aceste 2 noduri.
Functia INSERT_LEFT: daca nodul curent reprezinta primul nod din lista, nu se poate insera niciun alt caracter la stanga, de aceea afiseaza ERROR, in cazul in care nodul curent e oricare alt nod din banda, inserez la stanga un al nod si fac legaturile necesare intre noduri.
Functia WRITE pune caracterul dat pe pozitia nodului curent.
Functia INSERT_RIGHT: daca nodul curent reprezinta ultimul nod din banda, se insereaza la dreapta un nod si se fac legaturile. Daca nodul curent e oricare alt nod din lista, se adauga de asemenea un nod intre cel curent si nod_curent->next, de aceea am salvat intr-o variabila nod_curent->next si am facut legaturile intre cele 3 noduri.
Functia SHOW_CURRENT afiseaza valoarea nodului curent.
Functia SHOW: salvez intr-o variabila santinela. Parcurg banda de la santinela pana la ultimul nod din banda si verific daca aceasta variabila coincide cu nodul curent, afisez valoarea nodului intre cele 2 paranteze | |, altfel afisez valoarea normal.
In int main am inceput cu citirea din fisier, apoi apelez functia de creare a benzii, a cozii, a stivelor undo si redo. Citesc initial numarul de operatii. Parcurg cu un for acest numar si se citeste de fiecare data o operatie, de asemenea si "\n" dupa fiecare operatie pentru a trece pe randul urmator. Adaug in coada toate operatiile diferite de EXECUTE, SHOW SI SHOW_CURRENT, adica operatiile de tip UPDATE. Cand se intalnesc operatiile SHOW si SHOW_CURRENT se apeleaza functiile reprezentative. Daca operatia citita este EXECUTE, verific ce operatie se afla in primul nod din coada si se apeleaza functia reprezentativa operatiei intalnite. Dupa acest pas, se elimina operatia ce se afla in primul nod din coada apeland functia "dequeue" creata anterior. La final apelez functiile create anterior de dezalocare a memoriei.

